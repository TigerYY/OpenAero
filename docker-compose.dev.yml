version: '3.8'

services:
  # 开发环境应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://openaero:password@db:5432/openaero
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key
      - NEXT_PUBLIC_SENTRY_DSN=your-sentry-dsn
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - openaero-dev-network

  # 开发数据库
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=openaero_dev
      - POSTGRES_USER=openaero
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openaero -d openaero_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - openaero-dev-network

  # 开发Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - openaero-dev-network

  # 数据库管理工具
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - openaero-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  openaero-dev-network:
    driver: bridge
