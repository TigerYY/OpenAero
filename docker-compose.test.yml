# 测试环境 Docker Compose 配置
# 用于在本地验证生产环境配置

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: openaero-app-test
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - DATABASE_URL=postgresql://openaero:test_password@db:5432/openaero
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=test_secret_key_for_testing_only
      - JWT_SECRET=test_jwt_secret_for_testing_only
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - test-network

  db:
    image: postgres:15-alpine
    container_name: openaero-db-test
    environment:
      - POSTGRES_DB=openaero
      - POSTGRES_USER=openaero
      - POSTGRES_PASSWORD=test_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openaero -d openaero"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - test-network

  redis:
    image: redis:7-alpine
    container_name: openaero-redis-test
    ports:
      - "6379:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local